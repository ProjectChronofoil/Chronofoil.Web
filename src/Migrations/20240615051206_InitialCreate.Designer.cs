// <auto-generated />
using System;
using Chronofoil.Web.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chronofoil.Web.Migrations
{
    [DbContext(typeof(ChronofoilDbContext))]
    [Migration("20240615051206_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chronofoil.Web.Persistence.CensoredOpcode", b =>
                {
                    b.Property<string>("GameVersion")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<int>("Opcode")
                        .HasColumnType("integer");

                    b.HasKey("GameVersion", "Key");

                    b.ToTable("Opcodes");
                });

            modelBuilder.Entity("Chronofoil.Web.Persistence.CfTokenInfo", b =>
                {
                    b.Property<Guid>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RemoteTokenId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("TokenId");

                    b.HasIndex("RefreshToken");

                    b.ToTable("CfTokens");
                });

            modelBuilder.Entity("Chronofoil.Web.Persistence.ChronofoilUpload", b =>
                {
                    b.Property<Guid>("CfCaptureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("MetricTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("MetricWhenEos")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("PublicTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("PublicWhenEos")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("CfCaptureId");

                    b.ToTable("Uploads");
                });

            modelBuilder.Entity("Chronofoil.Web.Persistence.RemoteTokenInfo", b =>
                {
                    b.Property<Guid>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProviderUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("RemoteTokens");
                });

            modelBuilder.Entity("Chronofoil.Web.Persistence.User", b =>
                {
                    b.Property<Guid>("CfUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<int>("TosVersion")
                        .HasColumnType("integer");

                    b.HasKey("CfUserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
